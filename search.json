[{"path":"https://sessioncheck.djnavarro.net/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 sessioncheck authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sessioncheck.djnavarro.net/articles/sessioncheck.html","id":"why-is-this-important","dir":"Articles","previous_headings":"","what":"Why is this important?","title":"sessioncheck","text":"common practice writing R scripts include snippet code like rm(list = ls()) top script. reason people reproducibility purposes, ensure script run context “clean” R session. goal good one, method used attain effective. thing rm(list = ls()) remove variables currently stored global environment, one many different ways previously-executed code can alter state R session. approach doesn’t provide degree safety following: packages may loaded library() change functions get executed code data sets environments may added search path attach() alter variables functions visible code options may set options() can alter code interpreted “hidden” variables global environment like .Random.seed affect R code execution ignored rm(list = ls()) …many ; ’s long list subtler ways R session state matters can affect script executes, rm(list = ls()) protect . , better practice restart R session immediately running script. running script fresh R session, ’re much less likely encounter issues.","code":""},{"path":"https://sessioncheck.djnavarro.net/articles/sessioncheck.html","id":"how-does-sessioncheck-help","dir":"Articles","previous_headings":"","what":"How does sessioncheck help?","title":"sessioncheck","text":"principle underpins sessioncheck scripts attempt “clean ” environment. “state” R session complicated, script detects evidence pre-existing R state isn’t “clean”, thing produce error – users responsibility ensure clean session. script doesn’t power make happen, shouldn’t try. accept core principle, thing want – within little snippet code insert top script – script look state R session, look signs isn’t run clean environment. detects signs, warn user, (cases strict controls required) produce error prevents rest script running. purpose sessioncheck provide tools can . – necessarily! – based heuristic rules scan session signs might issue, perfect. bare minimum can guaranteed approach strictly superior using rm(list = ls()). core idea simple. typical case, wouldn’t load package library(). Instead, put line R script: executed clean R session function nothing, script continues run normally . However, session “contaminated” – specific interpretation means call session “contaminated” – produce error, prevent script running, prompt user consider restarting R session. illustrate happens contaminated R session, ’ll two things R users agree fit definition contaminated R environment: creating objects global environment attaching packages environments: prior actions vary considerably riskiness. example , ’s quick risk assessment Attaching packages. Yes, ’s possible attaching sessioncheck package library() might cause problems, ’ve tried design safely likely won’t problem. Nevertheless, still something script notify user. design, typical use case package call sessioncheck::sessioncheck(). normal course events wouldn’t writing library(sessioncheck) script, yes, user probably informed, act politeness. Adding global environment. Adding my_data data frame variable global environment bad thing, practice ’re running script interactive context – thing data analysts lot, much software engineers – can quickly build lot “detritus”, bits pieces objects left behind code tried previously, time becomes big problem. user definitely informed, serious risk shere. Attaching (malicious!) environment search path. Attaching data sets using attach() considered extremely high-risk behaviour R long time. creates chaos R session potential horrific outcomes high. example construced deliberately malicious, just highlight bad can . script executes environment attach(my_data) previously executed, can longer rely R make sensible judgements arithmetic: face , R now believes 2 + 2 = 5. doesn’t actually believe . result happens prior call attach() ensures can longer rely shorthand assumes T == TRUE. Indeed: fact: ideal world R script never using T shorthand TRUE exposes code exactly problem, unfortunately massive amount old R code current use relies shortcut. risk real. Noting R session now contaminated three ways, can see happens sessioncheck() called contaminated environment: code placed top user script, script simply refuse run contaminated environment. produce error indicates checks performed, lists specific issues detected test. , error (rather warning) supplies prompt user may necessary restart R. way comparison, consider happen traditional rm(list=ls()) approach employed. Executing code fix one three problems: global environment now clean, code relies T mean TRUE now break, rm() command detached malicious environment: Even though rm(list = ls()) invoked, R session safe, corrupt behaviour script executes session. Importantly, notice sessioncheck() stricter rm() approach, still produces error: normal circumstances thing user – human – likely next restart R session, problems go away. intended way use sessioncheck. designed primarily analysts design code human---loop fashion. explicitly recommended production code situation R code executed without direct human oversight. Nevertheless, author vignette also person created contaminated R session, also knows reverse : general though, job cleaning session restarting reserved human analyst. Tools sessioncheck attempt .","code":"sessioncheck::sessioncheck(\"error\") library(sessioncheck)                     # trigger check_packages my_data = data.frame(T = FALSE, F = TRUE) # trigger check_globalenv attach(my_data)                           # trigger check_attachments #> The following objects are masked from package:base: #>  #>     F, T (2 + 2 == 5) == T #> [1] TRUE T == TRUE #> [1] FALSE T #> [1] FALSE sessioncheck::sessioncheck(\"error\") #> Error: sessioncheck() detected the following issues: #> - Objects in global environment: my_data #> - Attached packages: sessioncheck #> - Attached non-package environments: my_data #> It may be necessary to restart R rm(list = ls()) T #> [1] FALSE sessioncheck::sessioncheck(\"error\") #> Error: sessioncheck() detected the following issues: #> - Objects in global environment: [no issues] #> - Attached packages: sessioncheck #> - Attached non-package environments: my_data #> It may be necessary to restart R detach(\"my_data\") detach(\"package:sessioncheck\") sessioncheck::sessioncheck(\"error\")"},{"path":"https://sessioncheck.djnavarro.net/articles/sessioncheck.html","id":"how-does-sessioncheck-work","dir":"Articles","previous_headings":"","what":"How does sessioncheck work?","title":"sessioncheck","text":"sessioncheck package built several functions check one specific aspect R session: sessioncheck() function merely aggregates results individual checks. calling sessioncheck() can customise exactly checks performed rules apply check, now let’s look three specific checks performed default: checks global environment, checks attached packages, checks attached non-package environments. can run standalone checks using check_globalenv(), check_packages() check_attachments(), natural place start examining behaviour standalone checks.","code":""},{"path":"https://sessioncheck.djnavarro.net/articles/sessioncheck.html","id":"check-1-global-environment","dir":"Articles","previous_headings":"How does sessioncheck work?","what":"Check 1: global environment","title":"sessioncheck","text":"first simplest checks check_globalenv(), focuses aspect R session traditional rm(list=ls()) method : contents global environment. moment nothing global environment, considered “clean”. consequence, nothing happens run check: get check produce warning, ’ll need add variables: output indicates script detected visible_1 visible_2 global environment, issues warning suggest R session may contaminated. two arguments check_globalenv(): action specifies function issue detected. four allowed values: error, warn (default), message, none. allow character vector used specify rules used decide objects trigger action. variable name included allow list trigger action. special case: allow = NULL apply rule ls() uses listing contents global environment: variables start . ignored, trigger action. example illustrates actions used. , action taken print message rather warning; setting allow argument empty string, variable global environment trigger message, even “hidden” ones: time notice check detects visible_1 visible_2 like last time, now detects two hidden variables: .hidden_1 variable created earlier, also .Random.seed variable R uses store state random number generator.","code":"sessioncheck::check_globalenv() visible_1 <- \"this will get detected\" visible_2 <- \"so will this\" .hidden_1 <- \"but this will not\"  sessioncheck::check_globalenv() #> Warning: Detected objects: visible_1, visible_2 sessioncheck::check_globalenv(action = \"message\", allow = \"\") #> Detected objects: .hidden_1, .Random.seed, visible_1, visible_2"},{"path":"https://sessioncheck.djnavarro.net/articles/sessioncheck.html","id":"check-2-attached-packages","dir":"Articles","previous_headings":"How does sessioncheck work?","what":"Check 2: attached packages","title":"sessioncheck","text":"warning notes sessioncheck package attached. might considered acceptable, can ask check allow package:","code":"sessioncheck::check_packages() sessioncheck::check_packages(action = \"warn\", allow = \"sessioncheck\")"},{"path":"https://sessioncheck.djnavarro.net/articles/sessioncheck.html","id":"check-3-other-attachments","dir":"Articles","previous_headings":"How does sessioncheck work?","what":"Check 3: other attachments","title":"sessioncheck","text":"","code":"sessioncheck::check_attachments()"},{"path":"https://sessioncheck.djnavarro.net/articles/sessioncheck.html","id":"other-checks","dir":"Articles","previous_headings":"How does sessioncheck work?","what":"Other checks","title":"sessioncheck","text":"checks called default. One “allow list” check, user must specify exactly entities permitted (.e. list things don’t trigger action): check_namespaces() looks packages loaded attached others “block list” checks, user specifies cases blocked (.e., list things trigger action) TODO: check_options() looks specific options might concern TODO: check_sysenv() looks system environment variables","code":""},{"path":"https://sessioncheck.djnavarro.net/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Danielle Navarro. Author, maintainer, copyright holder.","code":""},{"path":"https://sessioncheck.djnavarro.net/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Navarro D (2025). sessioncheck: Checks Session Status. R package version 0.0.0.9000, https://github.com/djnavarro/sessioncheck.","code":"@Manual{,   title = {sessioncheck: Checks Session Status},   author = {Danielle Navarro},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/djnavarro/sessioncheck}, }"},{"path":"https://sessioncheck.djnavarro.net/index.html","id":"sessioncheck","dir":"","previous_headings":"","what":"Checks Session Status","title":"Checks Session Status","text":"goal sessioncheck provide simple tools can called top script, produce warnings errors detects signs script executed clean R session. intended user sessioncheck beginner intermediate level R user learned enough R understand limitations using rm(list = ls()) method clean R session, perhaps point can take advantage sophisticated tools like targets, callr, . short, goal provide simple drop-replacement rm(list = ls()).","code":""},{"path":"https://sessioncheck.djnavarro.net/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Checks Session Status","text":"can install development version sessioncheck GitHub :","code":"# install.packages(\"pak\") pak::pak(\"djnavarro/sessioncheck\")"},{"path":"https://sessioncheck.djnavarro.net/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Checks Session Status","text":"intention using sessioncheck rarely load library(). Instead, single line code like added top script: default behaviour warn user issues detected, can converted error using sessioncheck::sessioncheck(\"error\") stricter check required. Explanations checks work can customised provided package documentation get started page.","code":"sessioncheck::sessioncheck() #> Warning: sessioncheck() detected the following issues: #> - Objects in global environment: [no issues] #> - Attached packages: pak, pkgdown, testthat, usethis #> - Attached non-package environments: [no issues]"},{"path":"https://sessioncheck.djnavarro.net/reference/object_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Check global environment and attached environments — object_checks","title":"Check global environment and attached environments — object_checks","text":"Individual session check functions inspect contents global environment names attached non-package environments. Session checkers can produce errors, warnings, messages requested.","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/object_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check global environment and attached environments — object_checks","text":"","code":"check_globalenv(action = \"warn\", allow = NULL)  check_attachments(action = \"warn\", allow = NULL)"},{"path":"https://sessioncheck.djnavarro.net/reference/object_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check global environment and attached environments — object_checks","text":"action Behaviour take status clean. Possible values \"error\", \"warn\", \"message\", \"none\". default action = \"warn\". allow Character vector containing names objects environments \"allowed\", trigger action.","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/object_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check global environment and attached environments — object_checks","text":"Invisibly returns status vector, logical vector names referring detected entity (e.g., object, environment). Values TRUE entity ignored, FALSE triggers action.","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/object_checks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check global environment and attached environments — object_checks","text":"default behaviour allow argument slightly checker: check_globalenv(): checker inspects state global environment takes action based objects found . allow = NULL, variables global environment trigger action name starts dot. example, .Random.seed .Last.value trigger actions default. check_attachments(): checker inspects environments search path. includes attached packages, anything added using attach(), global environment. allow = NULL, package environents trigger action, \"tools:rstudio\", \"tools:positron\", \"tools:callr\", \"Autoloads\". global environment package environment base package never trigger actions.","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/object_checks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check global environment and attached environments — object_checks","text":"","code":"check_globalenv(action = \"message\") check_attachments(action = \"message\")"},{"path":"https://sessioncheck.djnavarro.net/reference/package_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Check loaded namespaces and attached packages — package_checks","title":"Check loaded namespaces and attached packages — package_checks","text":"Individual session check functions examine attached packages loaded namespaces. Session checkers can produce errors, warnings, messages requested.","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/package_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check loaded namespaces and attached packages — package_checks","text":"","code":"check_packages(action = \"warn\", allow = NULL)  check_namespaces(action = \"warn\", allow = NULL)"},{"path":"https://sessioncheck.djnavarro.net/reference/package_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check loaded namespaces and attached packages — package_checks","text":"action Behaviour take status clean. Possible values \"error\", \"warn\", \"message\", \"none\". default action = \"warn\". allow Character vector containing names packages \"allowed\", trigger action. Base priority packages always allowed never trigger actions (see details).","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/package_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check loaded namespaces and attached packages — package_checks","text":"Invisibly returns status vector, logical vector names referring detected package. Values TRUE package ignored, FALSE triggers action.","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/package_checks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check loaded namespaces and attached packages — package_checks","text":"default behaviour allow argument slightly checker: check_packages(): checker inspects list packages attached search path (e.g., via library()). Regardless value allow, R packages \"base\" priority (e.g., base, utils, grDevices) trigger action. allow = NULL packages trigger actions. check_namespaces(): checker inspects list loaded namespaces (packages loaded attached). allow argument checker almost identical check_packages(): difference sessioncheck package always allowed loaded namespace, since package namespace must loaded order call function .","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/package_checks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check loaded namespaces and attached packages — package_checks","text":"","code":"check_packages(action = \"message\") #> Detected attached packages: sessioncheck check_namespaces(action = \"message\") #> Dectected loaded namespaces: jsonlite, xml2, jquerylib, textshaping, and 39 more"},{"path":"https://sessioncheck.djnavarro.net/reference/sessioncheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the overall status of the R session — sessioncheck","title":"Checks the overall status of the R session — sessioncheck","text":"Individual session check functions inspect one way R session considered \"clean\". Session checkers can produce errors, warnings, messages requested.","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/sessioncheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the overall status of the R session — sessioncheck","text":"","code":"sessioncheck(   action = \"warn\",   checks = c(\"globalenv\", \"packages\", \"attachments\"),   settings = getOption(\"sessioncheck.settings\") )"},{"path":"https://sessioncheck.djnavarro.net/reference/sessioncheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the overall status of the R session — sessioncheck","text":"action Behaviour take status clean. Possible values \"error\", \"warn\", \"message\", \"none\". default action = \"warn\". checks Character vector listing checks run. default run checks = c(\"globalenv\", \"packages\", \"attachments\") settings list specifying rules applied individual checks","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/sessioncheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the overall status of the R session — sessioncheck","text":"Invisibly returns status object, list named logical vectors. vector names refer detected entities specific check. Values TRUE entity ignored, FALSE triggers action.","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/sessioncheck.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks the overall status of the R session — sessioncheck","text":"sessioncheck() allows user apply multiple session checks single function","code":""},{"path":"https://sessioncheck.djnavarro.net/reference/sessioncheck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks the overall status of the R session — sessioncheck","text":"","code":"sessioncheck(action = \"message\") #> sessioncheck() detected the following issues: #> - Objects in global environment: [no issues] #> - Attached packages: sessioncheck #> - Attached non-package environments: [no issues]"}]
