% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R
\name{package_checks}
\alias{package_checks}
\alias{check_packages}
\alias{check_namespaces}
\title{Check loaded namespaces and attached packages}
\usage{
check_packages(action = "warn", allow = NULL)

check_namespaces(action = "warn", allow = NULL)
}
\arguments{
\item{action}{Behaviour to take if the status is not clean. Possible values are
"error", "warn", "message", and "none". The default is \code{action = "warn"}.}

\item{allow}{Character vector containing names of packages that are "allowed",
and will not trigger an action. Base priority packages are always allowed and will
never trigger actions (see details).}
}
\value{
Invisibly returns a status vector, a logical vector with names referring
to a detected package. Values are \code{TRUE} if the package is ignored, \code{FALSE} if it
triggers an action.
}
\description{
Individual session check functions that examine attached packages and loaded
namespaces. Session checkers can produce errors, warnings, or messages if requested.
}
\details{
The default behaviour of the \code{allow} argument is slightly for each checker:
\itemize{
\item \code{check_packages()}: This checker inspects the list of packages that have been
attached to the search path (e.g., via \code{library()}). Regardless of the value of
\code{allow}, R packages that have "base" priority (e.g., \strong{base}, \strong{utils}, and
\strong{grDevices}) do not trigger an action. When \code{allow = NULL} these are the only
packages that will not trigger actions.
\item \code{check_namespaces()}: This checker inspects the list of loaded namespaces
(packages that have been loaded but not attached). The \code{allow} argument for this
checker is almost identical to \code{check_packages()}: the only difference is that
the \strong{sessioncheck} package is always allowed as a loaded namespace, since the
package namespace must be loaded in order to call the function itself.
}
}
\examples{
check_packages(action = "message")
check_namespaces(action = "message")
 
}
